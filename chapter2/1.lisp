(define (make-rat n d)
  (define (simplify rat)
    (let ((g (gcd n d)))
      (cons (/ (numer rat) g) (/ (denom rat) g))))
  (define (norm-signal rat)
    (if (< (* (numer rat) (denom rat)) 0)
        (cons (- (abs (numer rat))) (abs (denom rat)))
        (cons (abs (numer rat)) (abs (denom rat)))))
  (if (= d 0)
      (error "denominator can't be 0")
      (simplify (norm-signal (cons n d)))))
